import { clickNav, gotoLocation } from "$src/automation/exploits/goto";
import { clickButtonWithText, setInputValue } from "$src/automation/exploits/interactions";
import { doc } from "$src/automation/exploits/references";
import type { NS } from "$src/types/gameTypes";
import { asyncWait } from "$server/utils/asyncUtils";

const CoinFlipPeriod = 1024;
const MaxBet = 10e3;
export const MaxCasinoProfit = 10e9;

export async function coinFlip(ns: NS) {
  await gotoLocation("Â¢", 1);
  await clickButtonWithText("Play coin flip");

  const possibilities = await getPossibilities();
  let possibilityIdx = 0;

  let sources = ns.getMoneySources();
  while (sources.sinceInstall.casino < MaxCasinoProfit) {
    const player = ns.getPlayer();
    await setInputValue("number", Math.min(player.money, MaxBet) + "");

    if (possibilities[possibilityIdx]) {
      await clickButtonWithText("Head!");
    } else {
      await clickButtonWithText("Tail!");
    }
    possibilityIdx++;

    sources = ns.getMoneySources();
  }

  await clickNav("Terminal");
}

async function getPossibilities(): Promise<Array<boolean>> {
  const possibilities = new Array<boolean>();
  await setInputValue("number", "1");

  for (let i = 0; i < CoinFlipPeriod; i++) {
    await clickButtonWithText("Head!");
    await asyncWait(250);

    const win = doc.evaluate(`//h3[text()=" win!"]`, doc).iterateNext();
    possibilities.push(!!win);
  }

  return possibilities;
}
