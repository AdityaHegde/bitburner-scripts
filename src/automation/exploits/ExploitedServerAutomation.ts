import { ServerAutomation } from "$src/automation/ServerAutomation";
import { runTerminalCommand } from "$src/automation/exploits/terminal";
import type { ServerDataList } from "$src/servers/serverDataList";
import { asyncWait } from "$server/utils/asyncUtils";

export class ExploitedServerAutomation extends ServerAutomation {
  public constructor(private readonly serverDataList: ServerDataList) {
    super();
  }

  public async connectToServer(server: string): Promise<void> {
    const path = this.serverDataList.serverDataNameMap["home"].getPathTo(server);
    for (const step of path) {
      if (step.name === "home") continue;
      runTerminalCommand(`connect ${step.name}`);
    }
  }

  public async installBackdoor(): Promise<void> {
    runTerminalCommand("backdoor");
    await asyncWait(5000);
    runTerminalCommand("home");
  }
}
